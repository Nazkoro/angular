{"ast":null,"code":"// import { Component, Input } from '@angular/core';\n// @Component({\n//     selector: 'child-comp',\n//     template: ` <p>Имя пользователя: {{userName}}</p>\n//                 <p>How Old {{userAge}}</p>`,\n//     styles: [`h2, p {color:navy;}`]\n// })\n// export class ChildComponent { \n//     @Input() userName: string = '';\n//     _userAge: number = 0\n//     @Input()\n//     set userAge(age:number) {\n//         if(age<0)\n//             this._userAge = 0;\n//         else if(age>100)\n//             this._userAge = 100\n//         else\n//             this._userAge = age\n//     }\n//     get userAge() { return this._userAge;}\n// }\n// import { Component, EventEmitter, Input, Output} from '@angular/core';\n// @Component({\n//     selector: 'child-comp',\n//     template: `<button (click)=\"change(true)\">+</button>\n//                <button (click)=\"change(false)\">-</button>`\n// })\n// export class ChildComponent{ \n//     @Output() onChanged = new EventEmitter<boolean>();\n//     change(increased:any) {\n//         this.onChanged.emit(increased);\n//     }\n// }\n// import { Component, Input, Output, EventEmitter } from '@angular/core';\n// @Component({\n//     selector: 'child-comp',\n//     template: `<input [ngModel]=\"userName\" (ngModelChange)=\"onNameChange($event)\" />`\n// })\n// export class ChildComponent{ \n//     @Input() userName:string = \"\";\n//     @Output() userNameChange = new EventEmitter<string>();\n//     onNameChange(model: string){\n//         this.userName = model;\n//         this.userNameChange.emit(model);\n//     }\n//}","map":null,"metadata":{},"sourceType":"script"}