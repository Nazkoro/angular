{"ast":null,"code":"// import { Component, Input } from '@angular/core';\n// @Component({\n//     selector: 'child-comp',\n//     template: ` <p>Имя пользователя: {{userName}}</p>\n//                 <p>How Old {{userAge}}</p>`,\n//     styles: [`h2, p {color:navy;}`]\n// })\n// export class ChildComponent { \n//     @Input() userName: string = '';\n//     _userAge: number = 0\n//     @Input()\n//     set userAge(age:number) {\n//         if(age<0)\n//             this._userAge = 0;\n//         else if(age>100)\n//             this._userAge = 100\n//         else\n//             this._userAge = age\n//     }\n//     get userAge() { return this._userAge;}\n// }\n// import { Component, EventEmitter, Input, Output} from '@angular/core';\n// @Component({\n//     selector: 'child-comp',\n//     template: `<button (click)=\"change(true)\">+</button>\n//                <button (click)=\"change(false)\">-</button>`\n// })\n// export class ChildComponent{ \n//     @Output() onChanged = new EventEmitter<boolean>();\n//     change(increased:any) {\n//         this.onChanged.emit(increased);\n//     }\n// }\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport let ChildComponent = /*#__PURE__*/(() => {\n  class ChildComponent {\n    constructor() {\n      this.userName = \"\";\n      this.userNameChange = new EventEmitter();\n    }\n\n    onNameChange(model) {\n      this.userName = model;\n      this.userNameChange.emit(model);\n    }\n\n  }\n\n  ChildComponent.ɵfac = function ChildComponent_Factory(t) {\n    return new (t || ChildComponent)();\n  };\n\n  ChildComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChildComponent,\n    selectors: [[\"child-comp\"]],\n    inputs: {\n      userName: \"userName\"\n    },\n    outputs: {\n      userNameChange: \"userNameChange\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ngModel\", \"ngModelChange\"]],\n    template: function ChildComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function ChildComponent_Template_input_ngModelChange_0_listener($event) {\n          return ctx.onNameChange($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngModel\", ctx.userName);\n      }\n    },\n    directives: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel],\n    encapsulation: 2\n  });\n  return ChildComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}